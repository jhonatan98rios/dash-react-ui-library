{"version":3,"file":"stream_reader_list.min.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///external window \"React\"","webpack:///external window \"PropTypes\"","webpack:///./src/lib/utils/reducer.js","webpack:///./src/lib/components/StreamReaderList.react.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","var getCurrentScript = function() {\n    var script = document.currentScript;\n    if (!script) {\n        /* Shim for IE11 and below */\n        /* Do not take into account async scripts and inline scripts */\n\n        var doc_scripts = document.getElementsByTagName('script');\n        var scripts = [];\n\n        for (var i = 0; i < doc_scripts.length; i++) {\n            scripts.push(doc_scripts[i]);\n        }\n\n        scripts = scripts.filter(function(s) { return !s.async && !s.text && !s.textContent; });\n        script = scripts.slice(-1)[0];\n    }\n\n    return script;\n};\n\nvar isLocalScript = function(script) {\n    return /\\/_dash-component-suites\\//.test(script.src);\n};\n\nObject.defineProperty(__webpack_require__, 'p', {\n    get: (function () {\n        var script = getCurrentScript();\n\n        var url = script.src.split('/').slice(0, -1).join('/') + '/';\n\n        return function() {\n            return url;\n        };\n    })()\n});\n\nif (typeof jsonpScriptSrc !== 'undefined') {\n    var __jsonpScriptSrc__ = jsonpScriptSrc;\n    jsonpScriptSrc = function(chunkId) {\n        var script = getCurrentScript();\n        var isLocal = isLocalScript(script);\n\n        var src = __jsonpScriptSrc__(chunkId);\n\n        if(!isLocal) {\n            return src;\n        }\n\n        var srcFragments = src.split('/');\n        var fileFragments = srcFragments.slice(-1)[0].split('.');\n\n        fileFragments.splice(1, 0, \"v0_0_1m1736920885\");\n        srcFragments.splice(-1, 1, fileFragments.join('.'))\n\n        return srcFragments.join('/');\n    };\n}\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"PropTypes\"];","export const initialState = {\r\n    data: [],\r\n    totalRows: 0,\r\n};\r\n\r\nexport function csvReducer(state, action) {\r\n    switch (action.type) {\r\n        case \"ADD_ROWS\":\r\n            return {\r\n                data: [...state.data, ...action.payload],\r\n                totalRows: state.data.length + action.payload.length,\r\n            };\r\n        default:\r\n            throw new Error(`Unknown action type: ${action.type}`);\r\n    }\r\n}","import React, { useState, useEffect, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { csvReducer, initialState } from '../utils/reducer'\r\n\r\nconst StreamReaderList = ({ id, setProps, url, style }) => {\r\n\r\n    const [state, dispatch] = useReducer(csvReducer, initialState);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch(url);\r\n            const reader = response.body.getReader();\r\n            const decoder = new TextDecoder(\"utf-8\");\r\n\r\n            let done = false;\r\n\r\n            while (!done) {\r\n                const { value, done: readerDone } = await reader.read();\r\n                done = readerDone;\r\n\r\n                if (value) {\r\n                    const rows = decoder.decode(value).split(\"\\n\").filter((row) => row.trim() !== \"\");\r\n                    dispatch({ type: \"ADD_ROWS\", payload: rows });\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching CSV data:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setProps({ value: state.totalRows })\r\n    }, [state.totalRows]);\r\n\r\n    return (\r\n        <div style={style} id={id}>\r\n            {!state.data && <p>Loading...</p>}\r\n            <ul>\r\n                {state.data.map((row, index) => (\r\n                    <li key={index}>{row}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nStreamReaderList.defaultProps = {};\r\n\r\nStreamReaderList.propTypes = {\r\n    /**\r\n     * The ID used to identify this component in Dash callbacks.\r\n     */\r\n    id: PropTypes.string,\r\n\r\n    /**\r\n     * Dash-assigned callback that should be called to report property changes\r\n     * to Dash, to make them available for callbacks.\r\n     */\r\n    setProps: PropTypes.func,\r\n\r\n    /**\r\n     * The URL used to fetcch data.\r\n     */\r\n    url: PropTypes.string,\r\n\r\n    /**\r\n     * The style used on the container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * The value used on the counter.\r\n     */\r\n    value: PropTypes.number\r\n};\r\n\r\nexport default StreamReaderList;\r\n"],"names":["url","__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","getCurrentScript","script","document","currentScript","doc_scripts","getElementsByTagName","scripts","i","length","push","filter","s","async","text","textContent","slice","src","split","join","jsonpScriptSrc","__jsonpScriptSrc__","chunkId","isLocal","test","srcFragments","fileFragments","splice","window","initialState","data","totalRows","csvReducer","state","action","type","concat","_toConsumableArray","payload","Error","_regeneratorRuntime","e","t","r","n","iterator","c","asyncIterator","u","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","f","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_arrayLikeToArray","Array","StreamReaderList","_ref","id","setProps","style","_useReducer2","useReducer","isArray","_arrayWithHoles","_iterableToArrayLimit","toString","from","_unsupportedIterableToArray","_nonIterableRest","dispatch","fetchData","_ref2","_callee","response","reader","decoder","_yield$reader$read","readerDone","rows","_context","fetch","body","getReader","TextDecoder","read","decode","row","trim","t0","console","error","arguments","apply","_next","_throw","useEffect","React","map","index","defaultProps","propTypes","PropTypes"],"sourceRoot":""}