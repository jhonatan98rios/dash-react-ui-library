{"version":3,"file":"websocket_client.min.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///external window \"React\"","webpack:///external window \"PropTypes\"","webpack:///./src/lib/components/WebsocketClient.react.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","var getCurrentScript = function() {\n    var script = document.currentScript;\n    if (!script) {\n        /* Shim for IE11 and below */\n        /* Do not take into account async scripts and inline scripts */\n\n        var doc_scripts = document.getElementsByTagName('script');\n        var scripts = [];\n\n        for (var i = 0; i < doc_scripts.length; i++) {\n            scripts.push(doc_scripts[i]);\n        }\n\n        scripts = scripts.filter(function(s) { return !s.async && !s.text && !s.textContent; });\n        script = scripts.slice(-1)[0];\n    }\n\n    return script;\n};\n\nvar isLocalScript = function(script) {\n    return /\\/_dash-component-suites\\//.test(script.src);\n};\n\nObject.defineProperty(__webpack_require__, 'p', {\n    get: (function () {\n        var script = getCurrentScript();\n\n        var url = script.src.split('/').slice(0, -1).join('/') + '/';\n\n        return function() {\n            return url;\n        };\n    })()\n});\n\nif (typeof jsonpScriptSrc !== 'undefined') {\n    var __jsonpScriptSrc__ = jsonpScriptSrc;\n    jsonpScriptSrc = function(chunkId) {\n        var script = getCurrentScript();\n        var isLocal = isLocalScript(script);\n\n        var src = __jsonpScriptSrc__(chunkId);\n\n        if(!isLocal) {\n            return src;\n        }\n\n        var srcFragments = src.split('/');\n        var fileFragments = srcFragments.slice(-1)[0].split('.');\n\n        fileFragments.splice(1, 0, \"v0_0_1m1738457338\");\n        srcFragments.splice(-1, 1, fileFragments.join('.'))\n\n        return srcFragments.join('/');\n    };\n}\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"PropTypes\"];","import React, { useState, useRef, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n * ExampleComponent is an example component.\r\n * It takes a property, `label`, and\r\n * displays it.\r\n * It renders an input with the property `value`\r\n * which is editable by the user.\r\n */\r\nconst WebsocketClient = ({ id, value, url, setProps }) => {\r\n    const [messages, setMessages] = useState([])\r\n    const [isConnected, setIsConnected] = useState(false)\r\n    const [inputMessage, setInputMessage] = useState(\"\")\r\n    const messagesRef = useRef(value);\r\n    const websocketRef = useRef(null)\r\n    const heartbeatRef = useRef(null)\r\n\r\n    const HEARTBEAT_INTERVAL = 30000 // 30 segundos\r\n\r\n    useEffect(() => {\r\n        if (!url) return\r\n\r\n        const connectWebSocket = () => {\r\n            websocketRef.current = new WebSocket(url)\r\n\r\n            websocketRef.current.onopen = () => {\r\n                console.log('WebSocket connected')\r\n                setIsConnected(true)\r\n                startHeartbeat()\r\n            }\r\n\r\n            websocketRef.current.onmessage = (event) => {\r\n                const data = JSON.parse(event.data)\r\n                if (data.type == \"message\") {\r\n                    messagesRef.current = [...messagesRef.current, { content: `Received: ${data.content}` }];\r\n                    setProps({ value: messagesRef.current });\r\n                    console.log(value) // Aqui ele é sempre um array vazio.\r\n                    \r\n                } else {\r\n                    console.log(data)\r\n                }\r\n            }\r\n\r\n            websocketRef.current.onclose = () => {\r\n                console.log('WebSocket disconnected. Reconnecting...')\r\n                setIsConnected(false)\r\n                stopHeartbeat()\r\n                setTimeout(connectWebSocket, 3000) // Reconecta após 3 segundos\r\n            }\r\n\r\n            websocketRef.current.onerror = (error) => {\r\n                console.error('WebSocket error', error)\r\n            }\r\n        }\r\n\r\n        const startHeartbeat = () => {\r\n            stopHeartbeat() // Garante que não tenha múltiplos timers\r\n            heartbeatRef.current = setInterval(() => {\r\n                if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\r\n                    websocketRef.current.send(JSON.stringify({ type: 'heartbeat', timestamp: Date.now() }))\r\n                }\r\n            }, HEARTBEAT_INTERVAL)\r\n        }\r\n\r\n        const stopHeartbeat = () => {\r\n            if (heartbeatRef.current) {\r\n                clearInterval(heartbeatRef.current)\r\n                heartbeatRef.current = null\r\n            }\r\n        }\r\n\r\n        connectWebSocket()\r\n\r\n        return () => {\r\n            stopHeartbeat()\r\n            websocketRef.current?.close()\r\n        }\r\n    }, [url])\r\n\r\n    const handleSendMessage = () => {\r\n        if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN && inputMessage.trim()) {\r\n            const content = { type: \"message\", content: inputMessage }\r\n            const strContent = JSON.stringify(content)\r\n            websocketRef.current.send(strContent)\r\n            messagesRef.current = [...messagesRef.current, { content: `Sent: ${inputMessage}` }];\r\n            setProps({ value: messagesRef.current });\r\n            console.log(value) // Aqui ele esta populado por todas as mensagens\r\n            setInputMessage(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id={id}>\r\n            <h3>WebSocket Client</h3>\r\n            <p>Status: {isConnected ? 'Conectado' : 'Desconectado'}</p>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputMessage}\r\n                    onChange={(e) => setInputMessage(e.target.value)}\r\n                    placeholder=\"Digite sua mensagem\"\r\n                />\r\n                <button onClick={handleSendMessage}>Enviar</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nWebsocketClient.defaultProps = {}\r\n\r\nWebsocketClient.propTypes = {\r\n    /**\r\n     * The ID used to identify this component in Dash callbacks.\r\n     */\r\n    id: PropTypes.string,\r\n\r\n    /**\r\n     * A url connection that will be used to create the socket.\r\n     */\r\n    url: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The value displayed in the input.\r\n     */\r\n    value: PropTypes.array,\r\n\r\n    /**\r\n     * Dash-assigned callback that should be called to report property changes\r\n     * to Dash, to make them available for callbacks.\r\n     */\r\n    setProps: PropTypes.func\r\n}\r\n\r\nexport default WebsocketClient\r\n"],"names":["url","__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","getCurrentScript","script","document","currentScript","doc_scripts","getElementsByTagName","scripts","i","length","push","filter","s","async","text","textContent","slice","src","split","join","jsonpScriptSrc","__jsonpScriptSrc__","chunkId","isLocal","test","srcFragments","fileFragments","splice","window","WebsocketClient","_ref","id","setProps","_useState2","_slicedToArray","useState","_useState4","isConnected","setIsConnected","_useState6","inputMessage","setInputMessage","messagesRef","useRef","websocketRef","heartbeatRef","useEffect","connectWebSocket","current","WebSocket","onopen","console","log","startHeartbeat","onmessage","event","data","JSON","parse","type","concat","_toConsumableArray","content","onclose","stopHeartbeat","setTimeout","onerror","error","setInterval","readyState","OPEN","send","stringify","timestamp","Date","now","clearInterval","_websocketRef$current","close","React","onChange","e","target","placeholder","onClick","trim","strContent","defaultProps","propTypes","PropTypes","isRequired"],"sourceRoot":""}